plugins {
	id 'java'
	id 'groovy'
	id "org.jetbrains.kotlin.jvm" version "1.2.61"
	id "org.jetbrains.kotlin.plugin.spring" version "1.2.61"
	id "com.jfrog.bintray" version "1.8.4"

	id 'eclipse'
	id 'eclipse-wtp'
	id 'idea'

//	id "org.springframework.boot" version "2.0.5.RELEASE"
	id "io.spring.dependency-management" version "1.0.6.RELEASE"

	id "com.google.protobuf" version "0.8.6" //$protobuf_gradle_plugin_version
}

apply plugin: 'base'
allprojects {
	apply plugin: 'java'
	apply plugin: 'groovy'
	apply plugin: 'kotlin'
	apply plugin: 'kotlin-spring'

	apply plugin: 'eclipse'
	apply plugin: 'eclipse-wtp'
	apply plugin: 'idea'

//	apply plugin: 'org.springframework.boot'
//	apply plugin: 'io.spring.dependency-management'

	apply from: "$rootProject.projectDir/scripts/release.gradle"
	apply from: "$rootProject.projectDir/scripts/maven.gradle"
	apply from: "$rootProject.projectDir/scripts/bintray.gradle"

	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
	group = project_group
	version = project_version
	sourceCompatibility = java_version
	targetCompatibility = java_version
	compileKotlin {
		kotlinOptions.jvmTarget = java_version
		kotlinOptions.freeCompilerArgs = ["-Xjsr305=strict"]
	}
	compileTestKotlin {
		kotlinOptions.jvmTarget = java_version
		kotlinOptions.freeCompilerArgs = ["-Xjsr305=strict"]
	}
	idea {
		module {
			downloadJavadoc = true
			downloadSources = true
		}
	}
	eclipse {
		classpath {
			downloadJavadoc = true
			downloadSources = true
		}
	}

	repositories {
		mavenCentral()
		jcenter()
		maven { url 'https://dl.bintray.com/archmagece/jvm-repo' }
	}

	dependencies {
		implementation "org.codehaus.groovy:groovy-all:$groovy_version"

		implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
		implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
		implementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
	}

	task stage(dependsOn: ['build'])
	build.mustRunAfter clean

	apply plugin: 'maven'
	apply plugin: 'maven-publish'
}

subprojects {

	dependencies {
		compile "javax.servlet:javax.servlet-api:$javax_servlet_version"
		compile "com.google.guava:guava:$guava_version"

		//test
		testCompile "org.springframework.boot:spring-boot-starter-test:$spring_boot_version"
		testCompile "org.springframework.security:spring-security-test:$spring_security_version"
		testCompile "com.jayway.jsonpath:json-path:$jayway_jsonpath_version"
		testCompile "com.google.guava:guava-testlib:$guava_version"

		//logging
		compile "org.springframework.boot:spring-boot-starter-logging:$spring_boot_version"
	}

	clean {
		delete 'out'
	}
}
